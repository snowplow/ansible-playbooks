---
- name: Prepare | Get the current users name
  shell: id -u -n
  register: user_name

- name: Prepare | Get the current users group
  shell: id -g -n
  register: user_group

- name: Prepare | Register the current Go version (if any)
  command: "{{software_install_dir}}/go/bin/go version"
  ignore_errors: yes
  register: go_version

- name: Check that the golang tar exists
  stat:
    path: "{{ansible_cache_dir}}/{{golang_tarball}}"
  register: golang_tar

- name: Install | Download the Go tarball
  command: wget {{golang_download_location}} -P {{ansible_cache_dir}}
  when: golang_tar.stat.exists == False
  sudo: yes

- name: Install | Extract the Go tarball if Go is not yet installed or if it is not the desired version
  shell: tar xzf {{ansible_cache_dir}}/{{golang_tarball}} -C {{software_install_dir}} creates={{software_install_dir}}/go
  when: go_version|failed or go_version.stdout != golang_version_string
  sudo: yes

- name: Install | Ensure that GOPATH exists
  file: path={{golang_gopath}} state=directory
  sudo: yes

- name: Install | Ensure that GOPATH is owned by current user
  shell: chown -R {{user_name.stdout}}:{{user_group.stdout}} {{golang_gopath}}
  sudo: yes

- name: Configure | Set GOROOT for all users and add to PATH
  copy: src=go-root.sh
        dest=/etc/profile.d
  sudo: yes

- name: Configure | Set GOPATH for all users and add to PATH
  copy: src=go-path.sh
        dest=/etc/profile.d
  sudo: yes

- name: Install | Ensure godep is installed
  command: go get github.com/tools/godep creates={{golang_gopath}}/bin/godep
  environment: golang_env
